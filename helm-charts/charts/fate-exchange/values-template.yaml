partyId: {{ .partyId }}
partyName: {{ .name }}

image:
  registry: {{ .registry | default "federatedai" }}
  isThridParty: {{ empty .registry | ternary  "false" "true" }}
  pullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
  {{- with .imagePullSecrets }}
  imagePullSecrets:
{{ toYaml . | indent 2 }}
  {{- end }}

exchange:
{{- with .rollsite }}
{{- with .exchange }}
  partyIp: {{ .ip }}
  partyPort: {{ .port }}
{{- end }}
{{- end }}

{{- with .podSecurityPolicy }}
podSecurityPolicy:
  enabled: {{ .enabled | default false }}
{{- end }}

persistence:
  enabled: {{ .persistence | default "false" }}

partyList:
{{- with .rollsite }}
{{- range .partyList }}
  - partyId: {{ .partyId }}
    partyIp: {{ .partyIp }}
    partyPort: {{ .partyPort }}
{{- end }}
{{- end }}

modules:
  rollsite: 
    include: {{ has "rollsite" .modules }}
    {{- with .rollsite }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type }}
    enableTLS: {{ .enableTLS | default false }}
    nodePort: {{ .nodePort }}
    partyList:
    {{- range .partyList }}
      - partyId: {{ .partyId }}
        partyIp: {{ .partyIp }}
        partyPort: {{ .partyPort }}
    {{- end }}
    {{- end }}
  nginx:
    include: {{ has "nginx" .modules }}
    {{- with .nginx }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type }}
    replicas: {{ .replicas }}
    httpNodePort:  {{ .httpNodePort }}
    grpcNodePort:  {{ .grpcNodePort }}
    route_table: 
      {{- range $key, $val := .route_table }}
      {{ $key }}: 
{{ toYaml $val | indent 8 }}
      {{- end }}
    {{- end }}
  trafficServer:
    include: {{ has "trafficServer" .modules }}
    {{- with .trafficServer }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type }}
    replicas: {{ .replicas }}
    nodePort: {{ .nodePort }}
    route_table: 
      sni:
    {{- range .route_table.sni }}
      - fqdn: {{ .fqdn }}
        tunnelRoute: {{ .tunnelRoute }}
    {{- end }}
    {{- end }}
    
  postgres:
    include: {{ has "postgres" .modules }}
    {{- with .postgres }}
    image: {{ .image }}
    imageTag: {{ .imageTag }}
    type: {{ .type | default "ClusterIP" }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    user: {{ .user }}
    password: {{ .password }}
    db: {{ .db }}
    subPath: {{ .subPath }}
    existingClaim: {{ .existingClaim }}
    storageClass: {{ .storageClass }}
    accessMode: {{ .accessMode }}
    size: {{ .size }}
    {{- end }}
    
  fmlManagerServer:
    include: {{ has "fmlManagerServer" .modules }}
    {{- with .fmlManagerServer }}
    image: {{ .image }}
    imageTag: {{ .imageTag }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type | default "ClusterIP" }}
    nodePort: {{ .nodePort }}
    loadBalancerIP: {{ .loadBalancerIP }}
    postgresHost: {{ .postgresHost | default "postgres" }}
    postgresPort: {{ .postgresPort | default "5432" }}
    postgresDb: {{ .postgresDb | default "fml_manager" }}
    postgresUser: {{ .postgresUser | default "fml_manager" }}
    postgresPassword: {{ .postgresPassword | default "fml_manager" }}
    tlsPort: {{ .tlsPort | default "8443" }}
    serverCert: {{ .serverCert | default "/var/lib/fml_manager/cert/server.crt" }}
    serverKey: {{ .serverKey | default "/var/lib/fml_manager/cert/server.key" }}
    clientCert: {{ .clientCert| default "/var/lib/fml_manager/cert/client.crt" }}
    clientKey: {{ .clientKey | default "/var/lib/fml_manager/cert/client.key" }}
    caCert: {{ .caCert | default "/var/lib/fml_manager/cert/ca.crt" }}
    tlsEnabled: {{ .tlsEnabled | default "true" }}
    {{- end }}